{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vestingWalletAddress",
          "type": "address"
        }
      ],
      "name": "VestingWalletCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "start",
          "type": "uint64"
        },
        {
          "internalType": "uint16[]",
          "name": "cliff",
          "type": "uint16[]"
        }
      ],
      "name": "createVestingWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "vestingWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xaf37b398347ed2b1e9ca0b5e59923407c74f8116e52bb290483fba70bd8e28db",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1255015",
    "logsBloom": "0x
    "blockHash": "0x0a9c2f414ca9b50be5e8d8c7b23904adc1af588e5c6cfdbf987cfde2c07cf40a",
    "transactionHash": "0xaf37b398347ed2b1e9ca0b5e59923407c74f8116e52bb290483fba70bd8e28db",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xaf37b398347ed2b1e9ca0b5e59923407c74f8116e52bb290483fba70bd8e28db",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0a9c2f414ca9b50be5e8d8c7b23904adc1af588e5c6cfdbf987cfde2c07cf40a"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "1255015",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d2acce6cabc33566dcc36e2a4a4efb5d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vestingWalletAddress\",\"type\":\"address\"}],\"name\":\"VestingWalletCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint16[]\",\"name\":\"cliff\",\"type\":\"uint16[]\"}],\"name\":\"createVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"vestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexey Eramasov\",\"details\":\"This contract handles the creation and registration of new VestingWallet contracts.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"VestingWalletFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestingWalletFactory.sol\":\"VestingWalletFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VestingWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.15;\\r\\n\\r\\nimport \\\"./libraries/SafeERC20.sol\\\";\\r\\nimport \\\"./libraries/Address.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title VestingWallet\\r\\n * @author Alexey Eramasov\\r\\n * @dev This contract handles the vesting of ERC20 token for a given beneficiary. Custody of token\\r\\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\\r\\n * The vesting schedule can be set through the {cliff_} argument in the constructor.\\r\\n *\\r\\n * Token specified to this contract will follow the vesting schedule as if it was locked from the beginning.\\r\\n */\\r\\ncontract VestingWallet {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    event TokenReleased(uint256 amount);\\r\\n\\r\\n    uint256 public constant MONTH = 30 days; // 1 month duration\\r\\n    uint256 public constant TOTAL_CLIFF_SIZE = 10000; // 100%\\r\\n\\r\\n    address private immutable _token; // ERC20 token address\\r\\n    address private immutable _beneficiary; // Beneficiary address\\r\\n    uint256 private immutable _start; // Start timestamp in seconds\\r\\n\\r\\n    uint16[] private _cliff; // Representation of vesting cliff in percent per month\\r\\n    uint256 private _released; // Released amount of the token\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values of the {token}, {beneficiary}, {start} and {cliff}\\r\\n     */\\r\\n    constructor(\\r\\n        address token_,\\r\\n        address beneficiary_,\\r\\n        uint256 start_,\\r\\n        uint16[] memory cliff_\\r\\n    ) {\\r\\n        require(token_ != address(0), \\\"VestingWallet: token is zero addres\\\");\\r\\n        require(\\r\\n            beneficiary_ != address(0),\\r\\n            \\\"VestingWallet: beneficiary is zero address\\\"\\r\\n        );\\r\\n        require(_checkCliff(cliff_), \\\"VestingWallet: cliff is not 100%\\\");\\r\\n\\r\\n        _token = token_;\\r\\n        _beneficiary = beneficiary_;\\r\\n        _start = start_ == 0 ? block.timestamp : start_;\\r\\n        _cliff = cliff_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns token address\\r\\n     */\\r\\n    function token() public view returns (address) {\\r\\n        return _token;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns beneficiary address\\r\\n     */\\r\\n    function beneficiary() public view returns (address) {\\r\\n        return _beneficiary;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns start timestamp\\r\\n     */\\r\\n    function start() public view returns (uint256) {\\r\\n        return _start;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns vesting cliff array\\r\\n     */\\r\\n    function cliff() public view returns (uint16[] memory) {\\r\\n        return _cliff;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns released amount of the token\\r\\n     */\\r\\n    function released() public view returns (uint256) {\\r\\n        return _released;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns reserves of token the locked in the contract\\r\\n     */\\r\\n    function reserves() public view returns (uint256) {\\r\\n        return IERC20(_token).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Releases locked token according to vesting schedule\\r\\n     */\\r\\n    function release() external {\\r\\n        require(\\r\\n            _start < block.timestamp,\\r\\n            \\\"VestingWallet: vesting is not started yet\\\"\\r\\n        );\\r\\n\\r\\n        (\\r\\n            uint16 releasedShare,\\r\\n            uint16 releasedIntervals\\r\\n        ) = _calculateReleasedShare();\\r\\n\\r\\n        require(\\r\\n            releasedShare > 0 || releasedIntervals > 0,\\r\\n            \\\"VestingWallet: nothing to withdraw\\\"\\r\\n        );\\r\\n\\r\\n        uint256 releasable = _calculateReservesOnShare(\\r\\n            releasedShare,\\r\\n            reserves()\\r\\n        );\\r\\n\\r\\n        IERC20(_token).safeTransfer(_beneficiary, releasable);\\r\\n        _released += releasable;\\r\\n\\r\\n        emit TokenReleased(releasable);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks vesting cliff for required length\\r\\n     * @param cliff_ Representation of vesting cliff\\r\\n     * @return bool Result of equality check\\r\\n     */\\r\\n    function _checkCliff(uint16[] memory cliff_) internal pure returns (bool) {\\r\\n        uint16 total;\\r\\n        for (uint16 i = 0; i < cliff_.length; i++) {\\r\\n            total += cliff_[i];\\r\\n        }\\r\\n\\r\\n        return total == TOTAL_CLIFF_SIZE;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates released share and current interval\\r\\n     * @return releasedShare Total share that already released by now from start\\r\\n     * @return i Current interval in cliff\\r\\n     */\\r\\n    function _calculateReleasedShare() internal view returns (uint16, uint16) {\\r\\n        uint16 releasedShare = 0;\\r\\n        uint16 i = 0;\\r\\n        uint256 accumulatedDate = start();\\r\\n\\r\\n        for (i; i < _cliff.length; i++) {\\r\\n            accumulatedDate += MONTH;\\r\\n            if (accumulatedDate > block.timestamp) {\\r\\n                break;\\r\\n            }\\r\\n            releasedShare += _cliff[i];\\r\\n        }\\r\\n\\r\\n        return (releasedShare, i);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates how many reserves must be released for a given share\\r\\n     * @param _share Some share of total reserves\\r\\n     * @param _amount  Total amount of the token reserves\\r\\n     * @return uint256 Calculation result\\r\\n     */\\r\\n    function _calculateReservesOnShare(uint32 _share, uint256 _amount)\\r\\n        internal\\r\\n        pure\\r\\n        returns (uint256)\\r\\n    {\\r\\n        require(\\r\\n            _share <= TOTAL_CLIFF_SIZE,\\r\\n            \\\"VestingWallet: total share is greater than 100%\\\"\\r\\n        );\\r\\n\\r\\n        return (_amount / TOTAL_CLIFF_SIZE) * _share;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x12a333d53936381e9e659571bd47ffe4ddf8536f19aa0a9c43392c0c009157b0\",\"license\":\"MIT\"},\"contracts/VestingWalletFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.15;\\r\\n\\r\\nimport \\\"./VestingWallet.sol\\\";\\r\\nimport \\\"./entities/Ownable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title VestingWalletFactory\\r\\n * @author Alexey Eramasov\\r\\n * @dev This contract handles the creation and registration of new VestingWallet contracts.\\r\\n */\\r\\ncontract VestingWalletFactory is Ownable {\\r\\n    address[] private _registry;\\r\\n\\r\\n    event VestingWalletCreated(address indexed vestingWalletAddress);\\r\\n\\r\\n    function registry() public view returns (address[] memory) {\\r\\n        return _registry;\\r\\n    }\\r\\n\\r\\n    function vestingWallet(uint256 index) public view returns (address) {\\r\\n        return _registry[index];\\r\\n    }\\r\\n\\r\\n    function createVestingWallet(\\r\\n        address token,\\r\\n        address beneficiary,\\r\\n        uint64 start,\\r\\n        uint16[] calldata cliff\\r\\n    ) external onlyOwner returns (address) {\\r\\n        VestingWallet newVestingWallet = new VestingWallet(\\r\\n            token,\\r\\n            beneficiary,\\r\\n            start,\\r\\n            cliff\\r\\n        );\\r\\n\\r\\n        address vestingWalletAddress = address(newVestingWallet);\\r\\n\\r\\n        _registry.push(vestingWalletAddress);\\r\\n\\r\\n        emit VestingWalletCreated(vestingWalletAddress);\\r\\n\\r\\n        return address(vestingWalletAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x03f3c20f597ddfc8e21ca9c2721b5b12e54eaeae5a6c66529cdb9e560a0002c5\",\"license\":\"MIT\"},\"contracts/entities/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"../libraries/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x220242e218b7f64bcff13f82acc14e3fd845af7cba7b8e2b45b462390019a7ca\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.5.0)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\",\"keccak256\":\"0xb41ab267bdfd4afdba913c35e956cbf6db600b2521f2063eaa58df5118a8f4fc\",\"license\":\"MIT\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.5.0)\\r\\n\\r\\npragma solidity ^0.8.1;\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\r\\n     *\\r\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\r\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\r\\n     * constructor.\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize/address.code.length, which returns 0\\r\\n        // for contracts in construction, since the code is only stored at the end\\r\\n        // of the constructor execution.\\r\\n\\r\\n        return account.code.length > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain `call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\r\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\r\\n     * revert reason using the provided one.\\r\\n     *\\r\\n     * _Available since v4.3._\\r\\n     */\\r\\n    function verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x6781f02b9c62d523be1425f474af8c6609c88ba5e7c5a9b80e327e4557aaa840\",\"license\":\"MIT\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf4a659f2b75594a641b80cea6cfbb5cccdc369243e701a0bbcca2cc00026059e\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\nimport \\\"./Address.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title SafeERC20\\r\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\r\\n * contract returns false). Tokens that return no value (and instead revert or\\r\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\r\\n * successful.\\r\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\r\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\r\\n */\\r\\nlibrary SafeERC20 {\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(\\r\\n        IERC20 token,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Deprecated. This function has issues similar to the ones found in\\r\\n     * {IERC20-approve}, and its usage is discouraged.\\r\\n     *\\r\\n     * Whenever possible, use {safeIncreaseAllowance} and\\r\\n     * {safeDecreaseAllowance} instead.\\r\\n     */\\r\\n    function safeApprove(\\r\\n        IERC20 token,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        // safeApprove should only be called when setting an initial allowance,\\r\\n        // or when resetting it to zero. To increase and decrease it, use\\r\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\r\\n        require(\\r\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(\\r\\n        IERC20 token,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(\\r\\n        IERC20 token,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        unchecked {\\r\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\r\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\r\\n            uint256 newAllowance = oldAllowance - value;\\r\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\r\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\r\\n     * @param token The token targeted by the call.\\r\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\r\\n     */\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\r\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\r\\n        // the target address contains contract code and also asserts for success in the low-level call.\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\r\\n        if (returndata.length > 0) {\\r\\n            // Return data is optional\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x510c1d387b77a11c6927cd4e19fc35d3ead1d0599b4ff0184338405fac428523\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115608061007e6000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80632b824eb6146200006f578063715018a614620000a35780637b10399914620000af5780638da5cb5b14620000c8578063abaa3d1314620000da578063f2fde38b14620000f1575b600080fd5b6200008662000080366004620003d8565b62000108565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ad6200013b565b005b620000b96200017f565b6040516200009a9190620003f2565b6000546001600160a01b031662000086565b62000086620000eb3660046200045e565b620001e3565b620000ad6200010236600462000516565b620002d8565b6000600182815481106200012057620001206200053b565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314620001715760405162461bcd60e51b8152600401620001689062000551565b60405180910390fd5b6200017d60006200037a565b565b60606001805480602002602001604051908101604052809291908181526020018280548015620001d957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001ba575b5050505050905090565b600080546001600160a01b03163314620002115760405162461bcd60e51b8152600401620001689062000551565b600086868686866040516200022690620003ca565b6200023695949392919062000586565b604051809103906000f08015801562000253573d6000803e3d6000fd5b5060018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416908117909155604051929350839290917f0576628b5e656fe6844985fd91393f2067c6954debdc5ef19aa78c318f654a9f91a2979650505050505050565b6000546001600160a01b03163314620003055760405162461bcd60e51b8152600401620001689062000551565b6001600160a01b0381166200036c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000168565b62000377816200037a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f21806200060a83390190565b600060208284031215620003eb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015620004355783516001600160a01b0316835292840192918401916001016200040e565b50909695505050505050565b80356001600160a01b03811681146200045957600080fd5b919050565b6000806000806000608086880312156200047757600080fd5b620004828662000441565b9450620004926020870162000441565b9350604086013567ffffffffffffffff8082168214620004b157600080fd5b90935060608701359080821115620004c857600080fd5b818801915088601f830112620004dd57600080fd5b813581811115620004ed57600080fd5b8960208260051b85010111156200050357600080fd5b9699959850939650602001949392505050565b6000602082840312156200052957600080fd5b620005348262000441565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208083019190915267ffffffffffffffff851660408301526080606083018190528201839052600090849060a084019083805b87811015620005f957843561ffff8116808214620005e5578384fd5b8552509382019392820192600101620005c9565b50919a995050505050505050505056fe60e06040523480156200001157600080fd5b5060405162000f2138038062000f2183398101604081905262000034916200031b565b6001600160a01b0384166200009c5760405162461bcd60e51b815260206004820152602360248201527f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460448201526272657360e81b60648201526084015b60405180910390fd5b6001600160a01b038316620001075760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840162000093565b6200011281620001a6565b620001605760405162461bcd60e51b815260206004820181905260248201527f56657374696e6757616c6c65743a20636c696666206973206e6f742031303025604482015260640162000093565b6001600160a01b03808516608052831660a052811562000181578162000183565b425b60c05280516200019b9060009060208401906200020e565b505050505062000496565b60008060005b83518161ffff161015620001ff57838161ffff1681518110620001d357620001d36200041d565b602002602001015182620001e8919062000449565b915080620001f68162000472565b915050620001ac565b5061ffff166127101492915050565b82805482825590600052602060002090600f01601090048101928215620002ac5791602002820160005b838211156200027a57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000238565b8015620002aa5782816101000a81549061ffff02191690556002016020816001010492830192600103026200027a565b505b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b80516001600160a01b0381168114620002ed57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805161ffff81168114620002ed57600080fd5b600080600080608085870312156200033257600080fd5b6200033d85620002d5565b935060206200034e818701620002d5565b6040870151606088015191955093506001600160401b03808211156200037357600080fd5b818801915088601f8301126200038857600080fd5b8151818111156200039d576200039d620002f2565b8060051b604051601f19603f83011681018181108582111715620003c557620003c5620002f2565b60405291825284820192508381018501918b831115620003e457600080fd5b938501935b828510156200040d57620003fd8562000308565b84529385019392850192620003e9565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111562000469576200046962000433565b01949350505050565b600061ffff8083168181036200048c576200048c62000433565b6001019392505050565b60805160a05160c051610a39620004e8600039600081816101230152818161028a015261044d01526000818160cf01526103d20152600081816101530152818161020f01526103b00152610a396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461010f5780639613252114610119578063be9a655514610121578063d5999a5c14610147578063fc0c546a1461015157600080fd5b806313d033c01461009857806314e85467146100b657806338af3eed146100cd57806375172a8b14610107575b600080fd5b6100a0610177565b6040516100ad9190610835565b60405180910390f35b6100bf61271081565b6040519081526020016100ad565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ad565b6100bf6101f7565b610117610287565b005b6001546100bf565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b6100bf62278d0081565b7f00000000000000000000000000000000000000000000000000000000000000006100ef565b606060008054806020026020016040519081016040528092919081815260200182805480156101ed57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116101b45790505b5050505050905090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061087d565b905090565b427f00000000000000000000000000000000000000000000000000000000000000001061030d5760405162461bcd60e51b815260206004820152602960248201527f56657374696e6757616c6c65743a2076657374696e67206973206e6f74207374604482015268185c9d1959081e595d60ba1b60648201526084015b60405180910390fd5b600080610318610446565b9150915060008261ffff161180610333575060008161ffff16115b61038a5760405162461bcd60e51b815260206004820152602260248201527f56657374696e6757616c6c65743a206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610304565b60006103a18361ffff1661039c6101f7565b6104f5565b90506103f76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361058b565b806001600082825461040991906108ac565b90915550506040518181527f059ea9d6426bbae6ac9c53283977ee93577f8e299e1f7d7314b3d23eecfb2b089060200160405180910390a1505050565b60008080807f00000000000000000000000000000000000000000000000000000000000000005b60005461ffff831610156104eb5761048862278d00826108ac565b90504281116104eb5760008261ffff16815481106104a8576104a86108c4565b90600052602060002090601091828204019190066002029054906101000a900461ffff16836104d791906108da565b9250816104e381610900565b92505061046d565b5090939092509050565b60006127108363ffffffff1611156105675760405162461bcd60e51b815260206004820152602f60248201527f56657374696e6757616c6c65743a20746f74616c20736861726520697320677260448201526e6561746572207468616e203130302560881b6064820152608401610304565b63ffffffff831661057a61271084610921565b6105849190610943565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105dd9084906105e2565b505050565b6000610637826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106b49092919063ffffffff16565b8051909150156105dd57808060200190518101906106559190610962565b6105dd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610304565b60606106c384846000856106cb565b949350505050565b60608247101561072c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610304565b6001600160a01b0385163b6107835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610304565b600080866001600160a01b0316858760405161079f91906109b4565b60006040518083038185875af1925050503d80600081146107dc576040519150601f19603f3d011682016040523d82523d6000602084013e6107e1565b606091505b50915091506107f18282866107fc565b979650505050505050565b6060831561080b575081610584565b82511561081b5782518084602001fd5b8160405162461bcd60e51b815260040161030491906109d0565b6020808252825182820181905260009190848201906040850190845b8181101561087157835161ffff1683529284019291840191600101610851565b50909695505050505050565b60006020828403121561088f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108bf576108bf610896565b500190565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168185168083038211156108f7576108f7610896565b01949350505050565b600061ffff80831681810361091757610917610896565b6001019392505050565b60008261093e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561095d5761095d610896565b500290565b60006020828403121561097457600080fd5b8151801515811461058457600080fd5b60005b8381101561099f578181015183820152602001610987565b838111156109ae576000848401525b50505050565b600082516109c6818460208701610984565b9190910192915050565b60208152600082518060208401526109ef816040850160208701610984565b601f01601f1916919091016040019291505056fea26469706673582212202768f889fb4b1026d82f03c7ad902e05f6ace6e04866027113957ddceff027da64736f6c634300080f0033a2646970667358221220b9264c4ffb6a5d6bc86d8130f022e8537f396a1778531b87db5e01449e85814b64736f6c634300080f0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80632b824eb6146200006f578063715018a614620000a35780637b10399914620000af5780638da5cb5b14620000c8578063abaa3d1314620000da578063f2fde38b14620000f1575b600080fd5b6200008662000080366004620003d8565b62000108565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ad6200013b565b005b620000b96200017f565b6040516200009a9190620003f2565b6000546001600160a01b031662000086565b62000086620000eb3660046200045e565b620001e3565b620000ad6200010236600462000516565b620002d8565b6000600182815481106200012057620001206200053b565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314620001715760405162461bcd60e51b8152600401620001689062000551565b60405180910390fd5b6200017d60006200037a565b565b60606001805480602002602001604051908101604052809291908181526020018280548015620001d957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001ba575b5050505050905090565b600080546001600160a01b03163314620002115760405162461bcd60e51b8152600401620001689062000551565b600086868686866040516200022690620003ca565b6200023695949392919062000586565b604051809103906000f08015801562000253573d6000803e3d6000fd5b5060018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416908117909155604051929350839290917f0576628b5e656fe6844985fd91393f2067c6954debdc5ef19aa78c318f654a9f91a2979650505050505050565b6000546001600160a01b03163314620003055760405162461bcd60e51b8152600401620001689062000551565b6001600160a01b0381166200036c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000168565b62000377816200037a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f21806200060a83390190565b600060208284031215620003eb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015620004355783516001600160a01b0316835292840192918401916001016200040e565b50909695505050505050565b80356001600160a01b03811681146200045957600080fd5b919050565b6000806000806000608086880312156200047757600080fd5b620004828662000441565b9450620004926020870162000441565b9350604086013567ffffffffffffffff8082168214620004b157600080fd5b90935060608701359080821115620004c857600080fd5b818801915088601f830112620004dd57600080fd5b813581811115620004ed57600080fd5b8960208260051b85010111156200050357600080fd5b9699959850939650602001949392505050565b6000602082840312156200052957600080fd5b620005348262000441565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208083019190915267ffffffffffffffff851660408301526080606083018190528201839052600090849060a084019083805b87811015620005f957843561ffff8116808214620005e5578384fd5b8552509382019392820192600101620005c9565b50919a995050505050505050505056fe60e06040523480156200001157600080fd5b5060405162000f2138038062000f2183398101604081905262000034916200031b565b6001600160a01b0384166200009c5760405162461bcd60e51b815260206004820152602360248201527f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460448201526272657360e81b60648201526084015b60405180910390fd5b6001600160a01b038316620001075760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840162000093565b6200011281620001a6565b620001605760405162461bcd60e51b815260206004820181905260248201527f56657374696e6757616c6c65743a20636c696666206973206e6f742031303025604482015260640162000093565b6001600160a01b03808516608052831660a052811562000181578162000183565b425b60c05280516200019b9060009060208401906200020e565b505050505062000496565b60008060005b83518161ffff161015620001ff57838161ffff1681518110620001d357620001d36200041d565b602002602001015182620001e8919062000449565b915080620001f68162000472565b915050620001ac565b5061ffff166127101492915050565b82805482825590600052602060002090600f01601090048101928215620002ac5791602002820160005b838211156200027a57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000238565b8015620002aa5782816101000a81549061ffff02191690556002016020816001010492830192600103026200027a565b505b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b80516001600160a01b0381168114620002ed57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805161ffff81168114620002ed57600080fd5b600080600080608085870312156200033257600080fd5b6200033d85620002d5565b935060206200034e818701620002d5565b6040870151606088015191955093506001600160401b03808211156200037357600080fd5b818801915088601f8301126200038857600080fd5b8151818111156200039d576200039d620002f2565b8060051b604051601f19603f83011681018181108582111715620003c557620003c5620002f2565b60405291825284820192508381018501918b831115620003e457600080fd5b938501935b828510156200040d57620003fd8562000308565b84529385019392850192620003e9565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111562000469576200046962000433565b01949350505050565b600061ffff8083168181036200048c576200048c62000433565b6001019392505050565b60805160a05160c051610a39620004e8600039600081816101230152818161028a015261044d01526000818160cf01526103d20152600081816101530152818161020f01526103b00152610a396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461010f5780639613252114610119578063be9a655514610121578063d5999a5c14610147578063fc0c546a1461015157600080fd5b806313d033c01461009857806314e85467146100b657806338af3eed146100cd57806375172a8b14610107575b600080fd5b6100a0610177565b6040516100ad9190610835565b60405180910390f35b6100bf61271081565b6040519081526020016100ad565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ad565b6100bf6101f7565b610117610287565b005b6001546100bf565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b6100bf62278d0081565b7f00000000000000000000000000000000000000000000000000000000000000006100ef565b606060008054806020026020016040519081016040528092919081815260200182805480156101ed57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116101b45790505b5050505050905090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061087d565b905090565b427f00000000000000000000000000000000000000000000000000000000000000001061030d5760405162461bcd60e51b815260206004820152602960248201527f56657374696e6757616c6c65743a2076657374696e67206973206e6f74207374604482015268185c9d1959081e595d60ba1b60648201526084015b60405180910390fd5b600080610318610446565b9150915060008261ffff161180610333575060008161ffff16115b61038a5760405162461bcd60e51b815260206004820152602260248201527f56657374696e6757616c6c65743a206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610304565b60006103a18361ffff1661039c6101f7565b6104f5565b90506103f76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361058b565b806001600082825461040991906108ac565b90915550506040518181527f059ea9d6426bbae6ac9c53283977ee93577f8e299e1f7d7314b3d23eecfb2b089060200160405180910390a1505050565b60008080807f00000000000000000000000000000000000000000000000000000000000000005b60005461ffff831610156104eb5761048862278d00826108ac565b90504281116104eb5760008261ffff16815481106104a8576104a86108c4565b90600052602060002090601091828204019190066002029054906101000a900461ffff16836104d791906108da565b9250816104e381610900565b92505061046d565b5090939092509050565b60006127108363ffffffff1611156105675760405162461bcd60e51b815260206004820152602f60248201527f56657374696e6757616c6c65743a20746f74616c20736861726520697320677260448201526e6561746572207468616e203130302560881b6064820152608401610304565b63ffffffff831661057a61271084610921565b6105849190610943565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105dd9084906105e2565b505050565b6000610637826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106b49092919063ffffffff16565b8051909150156105dd57808060200190518101906106559190610962565b6105dd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610304565b60606106c384846000856106cb565b949350505050565b60608247101561072c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610304565b6001600160a01b0385163b6107835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610304565b600080866001600160a01b0316858760405161079f91906109b4565b60006040518083038185875af1925050503d80600081146107dc576040519150601f19603f3d011682016040523d82523d6000602084013e6107e1565b606091505b50915091506107f18282866107fc565b979650505050505050565b6060831561080b575081610584565b82511561081b5782518084602001fd5b8160405162461bcd60e51b815260040161030491906109d0565b6020808252825182820181905260009190848201906040850190845b8181101561087157835161ffff1683529284019291840191600101610851565b50909695505050505050565b60006020828403121561088f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108bf576108bf610896565b500190565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168185168083038211156108f7576108f7610896565b01949350505050565b600061ffff80831681810361091757610917610896565b6001019392505050565b60008261093e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561095d5761095d610896565b500290565b60006020828403121561097457600080fd5b8151801515811461058457600080fd5b60005b8381101561099f578181015183820152602001610987565b838111156109ae576000848401525b50505050565b600082516109c6818460208701610984565b9190910192915050565b60208152600082518060208401526109ef816040850160208701610984565b601f01601f1916919091016040019291505056fea26469706673582212202768f889fb4b1026d82f03c7ad902e05f6ace6e04866027113957ddceff027da64736f6c634300080f0033a2646970667358221220b9264c4ffb6a5d6bc86d8130f022e8537f396a1778531b87db5e01449e85814b64736f6c634300080f0033",
  "devdoc": {
    "author": "Alexey Eramasov",
    "details": "This contract handles the creation and registration of new VestingWallet contracts.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "VestingWalletFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1377,
        "contract": "contracts/VestingWalletFactory.sol:VestingWalletFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 535,
        "contract": "contracts/VestingWalletFactory.sol:VestingWalletFactory",
        "label": "_registry",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}