{
  "address": "0xe2274DfbCaC8f2B8B8e48C80DAAA1b75Df1a216D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vestingWalletAddress",
          "type": "address"
        }
      ],
      "name": "VestingWalletCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingWallet",
          "type": "address"
        }
      ],
      "name": "addVestingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "start",
          "type": "uint64"
        },
        {
          "internalType": "uint16[]",
          "name": "cliff",
          "type": "uint16[]"
        }
      ],
      "name": "createVestingWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeVestingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "vestingWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8171079601f5433c851b7772290ba1cab02ca058c5e5713e71af5ea4e74acfc6",
  "receipt": {
    "to": null,
    "from": "0x2D00763b93d5bFFe2Aa36f05fEe3e44EF4533b87",
    "contractAddress": "0xe2274DfbCaC8f2B8B8e48C80DAAA1b75Df1a216D",
    "transactionIndex": 89,
    "gasUsed": "1432005",
    "logsBloom": "0x
    "blockHash": "0x364e3963df73ed3f2ef3b4876ae6352b292db696d13efb573a46ad6afde827c6",
    "transactionHash": "0x8171079601f5433c851b7772290ba1cab02ca058c5e5713e71af5ea4e74acfc6",
    "logs": [
      {
        "transactionIndex": 89,
        "blockNumber": 19262842,
        "transactionHash": "0x8171079601f5433c851b7772290ba1cab02ca058c5e5713e71af5ea4e74acfc6",
        "address": "0xe2274DfbCaC8f2B8B8e48C80DAAA1b75Df1a216D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002d00763b93d5bffe2aa36f05fee3e44ef4533b87"
        ],
        "data": "0x",
        "logIndex": 212,
        "blockHash": "0x364e3963df73ed3f2ef3b4876ae6352b292db696d13efb573a46ad6afde827c6"
      }
    ],
    "blockNumber": 19262842,
    "cumulativeGasUsed": "12320957",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "db705135ccbe7eb92853a9700d575f68",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vestingWalletAddress\",\"type\":\"address\"}],\"name\":\"VestingWalletCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingWallet\",\"type\":\"address\"}],\"name\":\"addVestingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint16[]\",\"name\":\"cliff\",\"type\":\"uint16[]\"}],\"name\":\"createVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeVestingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"vestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexey Eramasov\",\"details\":\"This contract handles the creation and registration of new VestingWallet contracts.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"VestingWalletFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestingWalletFactory.sol\":\"VestingWalletFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VestingWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport \\\"./libraries/Address.sol\\\";\\n\\n/**\\n * @title VestingWallet\\n * @author Alexey Eramasov\\n * @dev This contract handles the vesting of ERC20 token for a given beneficiary. Custody of token\\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\\n * The vesting schedule can be set through the {cliff_} argument in the constructor.\\n *\\n * Token specified to this contract will follow the vesting schedule as if it was locked from the beginning.\\n */\\ncontract VestingWallet {\\n    using SafeERC20 for IERC20;\\n\\n    event TokenReleased(uint256 amount);\\n\\n    uint256 public constant MONTH = 2628288 seconds; // 1 month duration\\n    uint256 public constant TOTAL_CLIFF_SIZE = 10000; // 100%\\n\\n    address private immutable _token; // ERC20 token address\\n    address private immutable _beneficiary; // Beneficiary address\\n    uint256 private immutable _start; // Start timestamp in seconds\\n\\n    uint16[] private _cliff; // Representation of vesting cliff in percent per month\\n    uint256 private _released; // Released amount of the token\\n\\n    /**\\n     * @dev Sets the values of the {token}, {beneficiary}, {start} and {cliff}\\n     */\\n    constructor(\\n        address token_,\\n        address beneficiary_,\\n        uint256 start_,\\n        uint16[] memory cliff_\\n    ) {\\n        require(token_ != address(0), \\\"VestingWallet: token is zero addres\\\");\\n        require(\\n            beneficiary_ != address(0),\\n            \\\"VestingWallet: beneficiary is zero address\\\"\\n        );\\n        require(_checkCliff(cliff_), \\\"VestingWallet: cliff is not 100%\\\");\\n\\n        _token = token_;\\n        _beneficiary = beneficiary_;\\n        _start = start_ == 0 ? block.timestamp : start_;\\n        _cliff = cliff_;\\n    }\\n\\n    /**\\n     * @dev Returns token address\\n     */\\n    function token() public view returns (address) {\\n        return _token;\\n    }\\n\\n    /**\\n     * @dev Returns beneficiary address\\n     */\\n    function beneficiary() public view returns (address) {\\n        return _beneficiary;\\n    }\\n\\n    /**\\n     * @dev Returns start timestamp\\n     */\\n    function start() public view returns (uint256) {\\n        return _start;\\n    }\\n\\n    /**\\n     * @dev Returns vesting cliff array\\n     */\\n    function cliff() public view returns (uint16[] memory) {\\n        return _cliff;\\n    }\\n\\n    /**\\n     * @dev Returns released amount of the token\\n     */\\n    function released() public view returns (uint256) {\\n        return _released;\\n    }\\n\\n    /**\\n     * @dev Returns reserves of token the locked in the contract\\n     */\\n    function reserves() public view returns (uint256) {\\n        return IERC20(_token).balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @dev Releases locked token according to vesting schedule\\n     */\\n    function release() external {\\n        require(\\n            _start < block.timestamp,\\n            \\\"VestingWallet: vesting is not started yet\\\"\\n        );\\n\\n        (\\n            uint16 releasedShare,\\n            uint16 releasedIntervals\\n        ) = _calculateReleasedShare();\\n\\n        require(\\n            releasedShare > 0 || releasedIntervals > 0,\\n            \\\"VestingWallet: nothing to withdraw\\\"\\n        );\\n\\n        uint256 releasable = _calculateReservesOnShare(\\n            releasedShare,\\n            reserves()\\n        );\\n\\n        IERC20(_token).safeTransfer(_beneficiary, releasable);\\n        _released += releasable;\\n\\n        emit TokenReleased(releasable);\\n    }\\n\\n    /**\\n     * @dev Checks vesting cliff for required length\\n     * @param cliff_ Representation of vesting cliff\\n     * @return bool Result of equality check\\n     */\\n    function _checkCliff(uint16[] memory cliff_) internal pure returns (bool) {\\n        uint16 total;\\n        for (uint16 i = 0; i < cliff_.length; i++) {\\n            total += cliff_[i];\\n        }\\n\\n        return total == TOTAL_CLIFF_SIZE;\\n    }\\n\\n    /**\\n     * @dev Calculates released share and current interval\\n     * @return releasedShare Total share that already released by now from start\\n     * @return i Current interval in cliff\\n     */\\n    function _calculateReleasedShare() internal view returns (uint16, uint16) {\\n        uint16 releasedShare = 0;\\n        uint16 i = 0;\\n        uint256 accumulatedDate = start();\\n\\n        for (i; i < _cliff.length; i++) {\\n            accumulatedDate += MONTH;\\n            if (accumulatedDate > block.timestamp) {\\n                break;\\n            }\\n            releasedShare += _cliff[i];\\n        }\\n\\n        return (releasedShare, i);\\n    }\\n\\n    /**\\n     * @dev Calculates how many reserves must be released for a given share\\n     * @param _share Some share of total reserves\\n     * @param _amount  Total amount of the token reserves\\n     * @return uint256 Calculation result\\n     */\\n    function _calculateReservesOnShare(uint32 _share, uint256 _amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        require(\\n            _share <= TOTAL_CLIFF_SIZE,\\n            \\\"VestingWallet: total share is greater than 100%\\\"\\n        );\\n\\n        return (_amount / TOTAL_CLIFF_SIZE) * _share;\\n    }\\n}\\n\",\"keccak256\":\"0xa0413f6bba50962effd5862c266bdcd32a916c8099267a515032f13c099089d4\",\"license\":\"MIT\"},\"contracts/VestingWalletFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"./VestingWallet.sol\\\";\\nimport \\\"./entities/Ownable.sol\\\";\\n\\n/**\\n * @title VestingWalletFactory\\n * @author Alexey Eramasov\\n * @dev This contract handles the creation and registration of new VestingWallet contracts.\\n */\\ncontract VestingWalletFactory is Ownable {\\n    address[] private _registry;\\n\\n    event VestingWalletCreated(address indexed vestingWalletAddress);\\n\\n    function registry() public view returns (address[] memory) {\\n        return _registry;\\n    }\\n\\n    function vestingWallet(uint256 index) public view returns (address) {\\n        return _registry[index];\\n    }\\n\\n    function createVestingWallet(\\n        address token,\\n        address beneficiary,\\n        uint64 start,\\n        uint16[] calldata cliff\\n    ) external onlyOwner returns (address) {\\n        VestingWallet newVestingWallet = new VestingWallet(\\n            token,\\n            beneficiary,\\n            start,\\n            cliff\\n        );\\n\\n        address vestingWalletAddress = address(newVestingWallet);\\n\\n        _registry.push(vestingWalletAddress);\\n\\n        emit VestingWalletCreated(vestingWalletAddress);\\n\\n        return address(vestingWalletAddress);\\n    }\\n\\n    function addVestingWallet(address _vestingWallet) external onlyOwner {\\n        require(\\n            _vestingWallet != address(0),\\n            \\\"VestingWalletFactory: token address cannot be zero\\\"\\n        );\\n\\n        _registry.push(_vestingWallet);\\n    }\\n\\n    function removeVestingWallet(uint256 index) external onlyOwner {\\n        require(\\n            index <= _registry.length,\\n            \\\"VestingWalletFactory: index is out of range\\\"\\n        );\\n\\n        for (uint256 i = index; i < _registry.length - 1; i++) {\\n            _registry[i] = _registry[i + 1];\\n        }\\n\\n        _registry.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x41ba321d5c4f908b0df1d7f255be866339eff7d769522c54f09c9401b7ad06bb\",\"license\":\"MIT\"},\"contracts/entities/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../libraries/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\",\"keccak256\":\"0x793b291e45ccf265ede3e84f128ce1ccc201c42209dca10e9c707fa953c83aa0\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x27edcc5bd57f6ce7ed8896bd9bb6cbd3b39c7703c26cc1976115406df4ae8055\",\"license\":\"MIT\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x145813d8e6e3856197ba1842b10a69c3d991c3b16ba63a6c607b827c54e49105\",\"license\":\"MIT\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x6194a343ba7028abed9b18c311010ded180d601b2ad76bc9646a00d621451fd3\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0x3ed129ce99188978b1768041fbbaa51cb5c850113c7f33ccc43d19ce524c9dbe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61189c8061007e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638da5cb5b11620000625780638da5cb5b1462000108578063abaa3d13146200011a578063bcc043d41462000131578063f2fde38b146200014857600080fd5b80632b824eb614620000985780635ae0075814620000cc578063715018a614620000e55780637b10399914620000ef575b600080fd5b620000af620000a936600462000697565b6200015f565b6040516001600160a01b0390911681526020015b60405180910390f35b620000e3620000dd366004620006ce565b62000192565b005b620000e36200028c565b620000f9620002c7565b604051620000c39190620006f3565b6000546001600160a01b0316620000af565b620000af6200012b36600462000742565b6200032b565b620000e36200014236600462000697565b62000420565b620000e362000159366004620006ce565b62000597565b600060018281548110620001775762000177620007fa565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314620001c85760405162461bcd60e51b8152600401620001bf9062000810565b60405180910390fd5b6001600160a01b0381166200023b5760405162461bcd60e51b815260206004820152603260248201527f56657374696e6757616c6c6574466163746f72793a20746f6b656e20616464726044820152716573732063616e6e6f74206265207a65726f60701b6064820152608401620001bf565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620002b95760405162461bcd60e51b8152600401620001bf9062000810565b620002c5600062000639565b565b606060018054806020026020016040519081016040528092919081815260200182805480156200032157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000302575b5050505050905090565b600080546001600160a01b03163314620003595760405162461bcd60e51b8152600401620001bf9062000810565b600086868686866040516200036e9062000689565b6200037e95949392919062000845565b604051809103906000f0801580156200039b573d6000803e3d6000fd5b5060018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416908117909155604051929350839290917f0576628b5e656fe6844985fd91393f2067c6954debdc5ef19aa78c318f654a9f91a2979650505050505050565b6000546001600160a01b031633146200044d5760405162461bcd60e51b8152600401620001bf9062000810565b600154811115620004b55760405162461bcd60e51b815260206004820152602b60248201527f56657374696e6757616c6c6574466163746f72793a20696e646578206973206f60448201526a7574206f662072616e676560a81b6064820152608401620001bf565b805b60018054620004c79190620008de565b8110156200055d576001620004dd8282620008f8565b81548110620004f057620004f0620007fa565b600091825260209091200154600180546001600160a01b0390921691839081106200051f576200051f620007fa565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580620005548162000913565b915050620004b7565b5060018054806200057257620005726200092f565b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000546001600160a01b03163314620005c45760405162461bcd60e51b8152600401620001bf9062000810565b6001600160a01b0381166200062b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001bf565b620006368162000639565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f21806200094683390190565b600060208284031215620006aa57600080fd5b5035919050565b80356001600160a01b0381168114620006c957600080fd5b919050565b600060208284031215620006e157600080fd5b620006ec82620006b1565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620007365783516001600160a01b0316835292840192918401916001016200070f565b50909695505050505050565b6000806000806000608086880312156200075b57600080fd5b6200076686620006b1565b94506200077660208701620006b1565b9350604086013567ffffffffffffffff80821682146200079557600080fd5b90935060608701359080821115620007ac57600080fd5b818801915088601f830112620007c157600080fd5b813581811115620007d157600080fd5b8960208260051b8501011115620007e757600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208083019190915267ffffffffffffffff851660408301526080606083018190528201839052600090849060a084019083805b87811015620008b857843561ffff8116808214620008a4578384fd5b855250938201939282019260010162000888565b50919a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620008f357620008f3620008c8565b500390565b600082198211156200090e576200090e620008c8565b500190565b600060018201620009285762000928620008c8565b5060010190565b634e487b7160e01b600052603160045260246000fdfe60e06040523480156200001157600080fd5b5060405162000f2138038062000f2183398101604081905262000034916200031b565b6001600160a01b0384166200009c5760405162461bcd60e51b815260206004820152602360248201527f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460448201526272657360e81b60648201526084015b60405180910390fd5b6001600160a01b038316620001075760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840162000093565b6200011281620001a6565b620001605760405162461bcd60e51b815260206004820181905260248201527f56657374696e6757616c6c65743a20636c696666206973206e6f742031303025604482015260640162000093565b6001600160a01b03808516608052831660a052811562000181578162000183565b425b60c05280516200019b9060009060208401906200020e565b505050505062000496565b60008060005b83518161ffff161015620001ff57838161ffff1681518110620001d357620001d36200041d565b602002602001015182620001e8919062000449565b915080620001f68162000472565b915050620001ac565b5061ffff166127101492915050565b82805482825590600052602060002090600f01601090048101928215620002ac5791602002820160005b838211156200027a57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000238565b8015620002aa5782816101000a81549061ffff02191690556002016020816001010492830192600103026200027a565b505b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b80516001600160a01b0381168114620002ed57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805161ffff81168114620002ed57600080fd5b600080600080608085870312156200033257600080fd5b6200033d85620002d5565b935060206200034e818701620002d5565b6040870151606088015191955093506001600160401b03808211156200037357600080fd5b818801915088601f8301126200038857600080fd5b8151818111156200039d576200039d620002f2565b8060051b604051601f19603f83011681018181108582111715620003c557620003c5620002f2565b60405291825284820192508381018501918b831115620003e457600080fd5b938501935b828510156200040d57620003fd8562000308565b84529385019392850192620003e9565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111562000469576200046962000433565b01949350505050565b600061ffff8083168181036200048c576200048c62000433565b6001019392505050565b60805160a05160c051610a39620004e8600039600081816101230152818161028a015261044d01526000818160cf01526103d20152600081816101530152818161020f01526103b00152610a396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461010f5780639613252114610119578063be9a655514610121578063d5999a5c14610147578063fc0c546a1461015157600080fd5b806313d033c01461009857806314e85467146100b657806338af3eed146100cd57806375172a8b14610107575b600080fd5b6100a0610177565b6040516100ad9190610835565b60405180910390f35b6100bf61271081565b6040519081526020016100ad565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ad565b6100bf6101f7565b610117610287565b005b6001546100bf565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b6100bf62281ac081565b7f00000000000000000000000000000000000000000000000000000000000000006100ef565b606060008054806020026020016040519081016040528092919081815260200182805480156101ed57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116101b45790505b5050505050905090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061087d565b905090565b427f00000000000000000000000000000000000000000000000000000000000000001061030d5760405162461bcd60e51b815260206004820152602960248201527f56657374696e6757616c6c65743a2076657374696e67206973206e6f74207374604482015268185c9d1959081e595d60ba1b60648201526084015b60405180910390fd5b600080610318610446565b9150915060008261ffff161180610333575060008161ffff16115b61038a5760405162461bcd60e51b815260206004820152602260248201527f56657374696e6757616c6c65743a206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610304565b60006103a18361ffff1661039c6101f7565b6104f5565b90506103f76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361058b565b806001600082825461040991906108ac565b90915550506040518181527f059ea9d6426bbae6ac9c53283977ee93577f8e299e1f7d7314b3d23eecfb2b089060200160405180910390a1505050565b60008080807f00000000000000000000000000000000000000000000000000000000000000005b60005461ffff831610156104eb5761048862281ac0826108ac565b90504281116104eb5760008261ffff16815481106104a8576104a86108c4565b90600052602060002090601091828204019190066002029054906101000a900461ffff16836104d791906108da565b9250816104e381610900565b92505061046d565b5090939092509050565b60006127108363ffffffff1611156105675760405162461bcd60e51b815260206004820152602f60248201527f56657374696e6757616c6c65743a20746f74616c20736861726520697320677260448201526e6561746572207468616e203130302560881b6064820152608401610304565b63ffffffff831661057a61271084610921565b6105849190610943565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105dd9084906105e2565b505050565b6000610637826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106b49092919063ffffffff16565b8051909150156105dd57808060200190518101906106559190610962565b6105dd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610304565b60606106c384846000856106cb565b949350505050565b60608247101561072c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610304565b6001600160a01b0385163b6107835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610304565b600080866001600160a01b0316858760405161079f91906109b4565b60006040518083038185875af1925050503d80600081146107dc576040519150601f19603f3d011682016040523d82523d6000602084013e6107e1565b606091505b50915091506107f18282866107fc565b979650505050505050565b6060831561080b575081610584565b82511561081b5782518084602001fd5b8160405162461bcd60e51b815260040161030491906109d0565b6020808252825182820181905260009190848201906040850190845b8181101561087157835161ffff1683529284019291840191600101610851565b50909695505050505050565b60006020828403121561088f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108bf576108bf610896565b500190565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168185168083038211156108f7576108f7610896565b01949350505050565b600061ffff80831681810361091757610917610896565b6001019392505050565b60008261093e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561095d5761095d610896565b500290565b60006020828403121561097457600080fd5b8151801515811461058457600080fd5b60005b8381101561099f578181015183820152602001610987565b838111156109ae576000848401525b50505050565b600082516109c6818460208701610984565b9190910192915050565b60208152600082518060208401526109ef816040850160208701610984565b601f01601f1916919091016040019291505056fea2646970667358221220e4f9defd7b91a395023c7007e0500b68cbd17a7793469008bdd9fa5aed5acc1e64736f6c634300080f0033a2646970667358221220d99dbf6a1d5b9e283c20e7adc3e59c309967794a6f65a4383960a3161f391bc764736f6c634300080f0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638da5cb5b11620000625780638da5cb5b1462000108578063abaa3d13146200011a578063bcc043d41462000131578063f2fde38b146200014857600080fd5b80632b824eb614620000985780635ae0075814620000cc578063715018a614620000e55780637b10399914620000ef575b600080fd5b620000af620000a936600462000697565b6200015f565b6040516001600160a01b0390911681526020015b60405180910390f35b620000e3620000dd366004620006ce565b62000192565b005b620000e36200028c565b620000f9620002c7565b604051620000c39190620006f3565b6000546001600160a01b0316620000af565b620000af6200012b36600462000742565b6200032b565b620000e36200014236600462000697565b62000420565b620000e362000159366004620006ce565b62000597565b600060018281548110620001775762000177620007fa565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314620001c85760405162461bcd60e51b8152600401620001bf9062000810565b60405180910390fd5b6001600160a01b0381166200023b5760405162461bcd60e51b815260206004820152603260248201527f56657374696e6757616c6c6574466163746f72793a20746f6b656e20616464726044820152716573732063616e6e6f74206265207a65726f60701b6064820152608401620001bf565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620002b95760405162461bcd60e51b8152600401620001bf9062000810565b620002c5600062000639565b565b606060018054806020026020016040519081016040528092919081815260200182805480156200032157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000302575b5050505050905090565b600080546001600160a01b03163314620003595760405162461bcd60e51b8152600401620001bf9062000810565b600086868686866040516200036e9062000689565b6200037e95949392919062000845565b604051809103906000f0801580156200039b573d6000803e3d6000fd5b5060018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416908117909155604051929350839290917f0576628b5e656fe6844985fd91393f2067c6954debdc5ef19aa78c318f654a9f91a2979650505050505050565b6000546001600160a01b031633146200044d5760405162461bcd60e51b8152600401620001bf9062000810565b600154811115620004b55760405162461bcd60e51b815260206004820152602b60248201527f56657374696e6757616c6c6574466163746f72793a20696e646578206973206f60448201526a7574206f662072616e676560a81b6064820152608401620001bf565b805b60018054620004c79190620008de565b8110156200055d576001620004dd8282620008f8565b81548110620004f057620004f0620007fa565b600091825260209091200154600180546001600160a01b0390921691839081106200051f576200051f620007fa565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580620005548162000913565b915050620004b7565b5060018054806200057257620005726200092f565b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000546001600160a01b03163314620005c45760405162461bcd60e51b8152600401620001bf9062000810565b6001600160a01b0381166200062b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001bf565b620006368162000639565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f21806200094683390190565b600060208284031215620006aa57600080fd5b5035919050565b80356001600160a01b0381168114620006c957600080fd5b919050565b600060208284031215620006e157600080fd5b620006ec82620006b1565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620007365783516001600160a01b0316835292840192918401916001016200070f565b50909695505050505050565b6000806000806000608086880312156200075b57600080fd5b6200076686620006b1565b94506200077660208701620006b1565b9350604086013567ffffffffffffffff80821682146200079557600080fd5b90935060608701359080821115620007ac57600080fd5b818801915088601f830112620007c157600080fd5b813581811115620007d157600080fd5b8960208260051b8501011115620007e757600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038681168252851660208083019190915267ffffffffffffffff851660408301526080606083018190528201839052600090849060a084019083805b87811015620008b857843561ffff8116808214620008a4578384fd5b855250938201939282019260010162000888565b50919a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620008f357620008f3620008c8565b500390565b600082198211156200090e576200090e620008c8565b500190565b600060018201620009285762000928620008c8565b5060010190565b634e487b7160e01b600052603160045260246000fdfe60e06040523480156200001157600080fd5b5060405162000f2138038062000f2183398101604081905262000034916200031b565b6001600160a01b0384166200009c5760405162461bcd60e51b815260206004820152602360248201527f56657374696e6757616c6c65743a20746f6b656e206973207a65726f2061646460448201526272657360e81b60648201526084015b60405180910390fd5b6001600160a01b038316620001075760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840162000093565b6200011281620001a6565b620001605760405162461bcd60e51b815260206004820181905260248201527f56657374696e6757616c6c65743a20636c696666206973206e6f742031303025604482015260640162000093565b6001600160a01b03808516608052831660a052811562000181578162000183565b425b60c05280516200019b9060009060208401906200020e565b505050505062000496565b60008060005b83518161ffff161015620001ff57838161ffff1681518110620001d357620001d36200041d565b602002602001015182620001e8919062000449565b915080620001f68162000472565b915050620001ac565b5061ffff166127101492915050565b82805482825590600052602060002090600f01601090048101928215620002ac5791602002820160005b838211156200027a57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000238565b8015620002aa5782816101000a81549061ffff02191690556002016020816001010492830192600103026200027a565b505b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b80516001600160a01b0381168114620002ed57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805161ffff81168114620002ed57600080fd5b600080600080608085870312156200033257600080fd5b6200033d85620002d5565b935060206200034e818701620002d5565b6040870151606088015191955093506001600160401b03808211156200037357600080fd5b818801915088601f8301126200038857600080fd5b8151818111156200039d576200039d620002f2565b8060051b604051601f19603f83011681018181108582111715620003c557620003c5620002f2565b60405291825284820192508381018501918b831115620003e457600080fd5b938501935b828510156200040d57620003fd8562000308565b84529385019392850192620003e9565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111562000469576200046962000433565b01949350505050565b600061ffff8083168181036200048c576200048c62000433565b6001019392505050565b60805160a05160c051610a39620004e8600039600081816101230152818161028a015261044d01526000818160cf01526103d20152600081816101530152818161020f01526103b00152610a396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461010f5780639613252114610119578063be9a655514610121578063d5999a5c14610147578063fc0c546a1461015157600080fd5b806313d033c01461009857806314e85467146100b657806338af3eed146100cd57806375172a8b14610107575b600080fd5b6100a0610177565b6040516100ad9190610835565b60405180910390f35b6100bf61271081565b6040519081526020016100ad565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ad565b6100bf6101f7565b610117610287565b005b6001546100bf565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b6100bf62281ac081565b7f00000000000000000000000000000000000000000000000000000000000000006100ef565b606060008054806020026020016040519081016040528092919081815260200182805480156101ed57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116101b45790505b5050505050905090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061087d565b905090565b427f00000000000000000000000000000000000000000000000000000000000000001061030d5760405162461bcd60e51b815260206004820152602960248201527f56657374696e6757616c6c65743a2076657374696e67206973206e6f74207374604482015268185c9d1959081e595d60ba1b60648201526084015b60405180910390fd5b600080610318610446565b9150915060008261ffff161180610333575060008161ffff16115b61038a5760405162461bcd60e51b815260206004820152602260248201527f56657374696e6757616c6c65743a206e6f7468696e6720746f20776974686472604482015261617760f01b6064820152608401610304565b60006103a18361ffff1661039c6101f7565b6104f5565b90506103f76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361058b565b806001600082825461040991906108ac565b90915550506040518181527f059ea9d6426bbae6ac9c53283977ee93577f8e299e1f7d7314b3d23eecfb2b089060200160405180910390a1505050565b60008080807f00000000000000000000000000000000000000000000000000000000000000005b60005461ffff831610156104eb5761048862281ac0826108ac565b90504281116104eb5760008261ffff16815481106104a8576104a86108c4565b90600052602060002090601091828204019190066002029054906101000a900461ffff16836104d791906108da565b9250816104e381610900565b92505061046d565b5090939092509050565b60006127108363ffffffff1611156105675760405162461bcd60e51b815260206004820152602f60248201527f56657374696e6757616c6c65743a20746f74616c20736861726520697320677260448201526e6561746572207468616e203130302560881b6064820152608401610304565b63ffffffff831661057a61271084610921565b6105849190610943565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105dd9084906105e2565b505050565b6000610637826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106b49092919063ffffffff16565b8051909150156105dd57808060200190518101906106559190610962565b6105dd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610304565b60606106c384846000856106cb565b949350505050565b60608247101561072c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610304565b6001600160a01b0385163b6107835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610304565b600080866001600160a01b0316858760405161079f91906109b4565b60006040518083038185875af1925050503d80600081146107dc576040519150601f19603f3d011682016040523d82523d6000602084013e6107e1565b606091505b50915091506107f18282866107fc565b979650505050505050565b6060831561080b575081610584565b82511561081b5782518084602001fd5b8160405162461bcd60e51b815260040161030491906109d0565b6020808252825182820181905260009190848201906040850190845b8181101561087157835161ffff1683529284019291840191600101610851565b50909695505050505050565b60006020828403121561088f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108bf576108bf610896565b500190565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168185168083038211156108f7576108f7610896565b01949350505050565b600061ffff80831681810361091757610917610896565b6001019392505050565b60008261093e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561095d5761095d610896565b500290565b60006020828403121561097457600080fd5b8151801515811461058457600080fd5b60005b8381101561099f578181015183820152602001610987565b838111156109ae576000848401525b50505050565b600082516109c6818460208701610984565b9190910192915050565b60208152600082518060208401526109ef816040850160208701610984565b601f01601f1916919091016040019291505056fea2646970667358221220e4f9defd7b91a395023c7007e0500b68cbd17a7793469008bdd9fa5aed5acc1e64736f6c634300080f0033a2646970667358221220d99dbf6a1d5b9e283c20e7adc3e59c309967794a6f65a4383960a3161f391bc764736f6c634300080f0033",
  "devdoc": {
    "author": "Alexey Eramasov",
    "details": "This contract handles the creation and registration of new VestingWallet contracts.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "VestingWalletFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1517,
        "contract": "contracts/VestingWalletFactory.sol:VestingWalletFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 605,
        "contract": "contracts/VestingWalletFactory.sol:VestingWalletFactory",
        "label": "_registry",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}